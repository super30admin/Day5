//tc=O(nk)
//sc=O(n)

class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        
        HashMap<Double, List<String>> map = new HashMap<>();
        for (int i = 0; i < strs.length; i++) {
            String word = strs[i];
            double hashKey = findHashKey(word);
            if (!map.containsKey(hashKey)) {
                map.put(hashKey, new ArrayList<>());
            }
            map.get(hashKey).add(word);
        }
        return new ArrayList<>(map.values());
    }

    private double findHashKey(String word) {
        int[] pn = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103};
        double hashKey = 1;
        for (int i = 0; i < word.length(); i++) {
            hashKey = hashKey * pn[word.charAt(i) - 'a'];
        }
        return hashKey;
    }
}