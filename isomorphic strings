// O(n) time and space complexity
// ran on leetcode

class Solution {
    public boolean isIsomorphic(String s, String t) {
       HashMap <Character,Character> map= new HashMap<>();
       HashMap <Character,Character> hmap= new HashMap<>();
        int length = s.length();
       
        for (int i=0;i<length;i++){
          
            if (map.containsKey(s.charAt(i))==false){
               if (map.containsValue(t.charAt(i))){
                    return false;
                }
                map.put(s.charAt(i),t.charAt(i));}
                else{
                    char check = map.get(s.charAt(i));
                    if (check==t.charAt(i)){
                        continue;
                    }
                    else{return false;}
                }
        }
        
        
            return true;
    }
}
