#time: O(n)
# space: O(26) = O(1)
class Solution(object):
    def wordPattern(self, pattern, s):
        s_map, t_map = {}, {}
        # create a list works which has each element as the words in s
        words = s.split(" ")
        if len(words) != len(pattern):
            return False
        for i in range(len(pattern)):
            s_pat = pattern[i] 
            t_pat = words[i]

            if s_pat not in s_map:
                s_map[s_pat] = t_pat
            elif s_map[s_pat] != t_pat:
                return False
            if t_pat not in t_map:
                t_map[t_pat] = s_pat
            elif t_map[t_pat] != s_pat:
                return False

        return True