#time complexity: O(n), n is length of the two strings
#space complexity : O(k), where k is the no of unique characters in string
class Solution:
    def isIsomorphic(self, s: str, t: str) -> bool:
        if len(s) != len(t):
            return False
        if len(s)==0 and len(t)==0:
            return True
        if len(s)==0 or len(t)==0:
            return False
    
        smap = {}
        tmap = {}
    
        for i in range(len(s)):
            if s[i] in smap:
                if smap[s[i]] != t[i]:
                    return False
            else:
                if t[i] in tmap:
                    return False
                smap[s[i]] = t[i]
                tmap[t[i]] = s[i]
    
        return True
        
